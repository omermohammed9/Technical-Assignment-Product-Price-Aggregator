import { Test, TestingModule } from '@nestjs/testing';
import { AppController } from './app.controller';
import { AppService } from './app.service';
import { PrismaService } from './modules/prisma/prisma.service';

describe('AppController', () => {
  let appController: AppController;

  const mockPrismaService = {
    $queryRawUnsafe: jest.fn().mockResolvedValue([{ result: 2 }]), // Mock Prisma query
  };

  beforeEach(async () => {
    const app: TestingModule = await Test.createTestingModule({
      controllers: [AppController],
      providers: [
        AppService,
        { provide: PrismaService, useValue: mockPrismaService }, // Mock PrismaService
      ],
    }).compile();

    appController = app.get<AppController>(AppController);
  });

  it('should return database connection message', async () => {
    expect(await appController.getHello()).toBe(
      'Database connected: [{"result":2}]',
    );
  });

  it('should return "Hello World!"', async () => {
    expect(await appController.getHello()).toBe('Hello World!');
  });
});
